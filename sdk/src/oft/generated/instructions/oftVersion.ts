/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

import {
  Context,
  TransactionBuilder,
  defaultPublicKey,
  transactionBuilder,
} from '@metaplex-foundation/umi';
import {
  Serializer,
  bytes,
  mapSerializer,
  struct,
} from '@metaplex-foundation/umi/serializers';
import {
  ResolvedAccount,
  ResolvedAccountsWithIndices,
  getAccountMetasAndSigners,
} from '../shared';

// Data.
export type OftVersionInstructionData = { discriminator: Uint8Array };

export type OftVersionInstructionDataArgs = {};

export function getOftVersionInstructionDataSerializer(): Serializer<
  OftVersionInstructionDataArgs,
  OftVersionInstructionData
> {
  return mapSerializer<
    OftVersionInstructionDataArgs,
    any,
    OftVersionInstructionData
  >(
    struct<OftVersionInstructionData>([['discriminator', bytes({ size: 8 })]], {
      description: 'OftVersionInstructionData',
    }),
    (value) => ({
      ...value,
      discriminator: new Uint8Array([179, 115, 253, 187, 88, 22, 80, 64]),
    })
  ) as Serializer<OftVersionInstructionDataArgs, OftVersionInstructionData>;
}

// Instruction.
export function oftVersion(
  context: Pick<Context, 'programs'>
): TransactionBuilder {
  // Program ID.
  const programId = context.programs.getPublicKey('oft', defaultPublicKey(), 'custom')

  // Accounts.
  const resolvedAccounts = {} satisfies ResolvedAccountsWithIndices;

  // Accounts in order.
  const orderedAccounts: ResolvedAccount[] = Object.values(
    resolvedAccounts as ResolvedAccountsWithIndices
  );

  // Keys and Signers.
  const [keys, signers] = getAccountMetasAndSigners(
    orderedAccounts,
    'programId',
    programId
  );

  // Data.
  const data = getOftVersionInstructionDataSerializer().serialize({});

  // Bytes Created On Chain.
  const bytesCreatedOnChain = 0;

  return transactionBuilder([
    { instruction: { keys, programId, data }, signers, bytesCreatedOnChain },
  ]);
}
