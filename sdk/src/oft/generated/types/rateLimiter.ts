/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

import { Serializer, struct, u64 } from '@metaplex-foundation/umi/serializers';

export type RateLimiter = {
  capacity: bigint;
  tokens: bigint;
  refillPerSecond: bigint;
  lastRefillTime: bigint;
};

export type RateLimiterArgs = {
  capacity: number | bigint;
  tokens: number | bigint;
  refillPerSecond: number | bigint;
  lastRefillTime: number | bigint;
};

export function getRateLimiterSerializer(): Serializer<
  RateLimiterArgs,
  RateLimiter
> {
  return struct<RateLimiter>(
    [
      ['capacity', u64()],
      ['tokens', u64()],
      ['refillPerSecond', u64()],
      ['lastRefillTime', u64()],
    ],
    { description: 'RateLimiter' }
  ) as Serializer<RateLimiterArgs, RateLimiter>;
}
